name: Issue Mover
on:
  pull_request:
    types: ["ready_for_review", "converted_to_draft"]

jobs:
  issues:
    runs-on: ["ubuntu-latest"]
    env:
      PROJECT_ID: 13012631
      PROJECT_NAME: "trial-action"
      COLUMN_ID_OF_IN_PROGRESS: 15408994
      COLUMN_ID_OF_REVIEW: 15408997
      ISSUE_NUMBER: 11
      COLUMN_NAME_OF_DRAFT_PRS: "egyik"
      COLUMN_NAME_OF_NON_DRAFT_PRS: "masik"
    defaults:
      run:
        shell: bash
    steps:
      - name: debug1
        run: |
          echo "na ${{ github.event }} na"
          echo "na ${{ github.event.pull_request }} na"
          echo "na ${{ github.event.pull_request.body }} na"
          echo "EN" ${{ github.event_name }} "EN"
          echo "ET" ${{ github.event.type }} "ET"
          echo "EA" ${{ github.event.action }} "EA"
      - name: debug2a - get list of projects (needed only once, for setting the project ID)
        run: |
              export projectID=$(curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/projects | jq '.[] | select(.name == "'$PROJECT_NAME'") | .id')
              echo "GitHub ProjectID:" $projectID

              export columnIDForDraftPRs=$(curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/$PROJECT_ID/columns | jq '.[] | select(.name == "'$COLUMN_NAME_OF_DRAFT_PRS'") | .id')
              echo "ColumnID for Draft PRs:" $columnIDForDraftPRs

              export columnIDForNonDraftPRs=$(curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/$PROJECT_ID/columns | jq '.[] | select(.name == "'$COLUMN_NAME_OF_NON_DRAFT_PRS'") | .id')
              echo "ColumnID for Non-Draft PRs:" $columnIDForNonDraftPRs
      - name: debug2c - get columns of project (needed only once, for setting the column IDs)
        run: |
              curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/$PROJECT_ID/columns

      - name: debug2b - get cards of the "Review" or "In-progress" columns 
        run: |
              if [[ "${{ github.event.action }}" == "converted_to_draft" ]]; then
                echo "Moving from non-draft to draft"
                export sourceColumnID=$columnIDForNonDraftPRs
                export targetColumnID=$columnIDForDraftPRs
              else
                echo "Moving from draft to non-draft"
                export sourceColumnID=$columnIDForDraftPRs
                export targetColumnID=$columnIDForNonDraftPRs
              fi;
              export ticketNumber=11
              curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/columns/$sourceColumnID/cards | jq '.[] | select(.name|endswith("11"))' 
      - name: debug2f - move card
        run: |
              curl \
                  -X POST \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/columns/cards/66220864/moves \
                  -d '{"position":"bottom", "column_id": 15408994}';
      - name: debug3
        # grab the first line that starts with "Fixes", collect the ticket numbers from the line and move those tickets into their column.
        run: |
          for issueNumber in `echo "${{ github.event.pull_request.body }}" | grep -E "^Fixes" | head -n 1 | tr -d -C "0123456789#" | tr "#" "\n" | grep -E "[0-9]" | tr "\n" " "`; do
              echo "issueNumber:" $issueNumber;
              curlxxxxx \
                  -X POST \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/columns/cards/$issueNumber/moves
                  -d '{"position":"bottom", "column_id": 15408997}';
          done;
          echo "last issueNumber:" $issueNumber;

      - name: debug2e - this step is not needed
        run: |
              curl \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/issues/$ISSUE_NUMBER
