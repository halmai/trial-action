name: Issue Mover
on:
  pull_request:
    types: ["ready_for_review", "converted_to_draft"]

jobs:
  issues:
    runs-on: ["ubuntu-latest"]
    env:
      PROJECT_ID: 13012631
      PROJECT_NAME: "trial-action"
      COLUMN_ID_OF_IN_PROGRESS: 15408994
      COLUMN_ID_OF_REVIEW: 15408997
      ISSUE_NUMBER: 11
      COLUMN_NAME_OF_DRAFT_PRS: "egyik"
      COLUMN_NAME_OF_NON_DRAFT_PRS: "masik"
    defaults:
      run:
        shell: bash
    steps:
      - name: debug2a - get list of projects (needed only once, for setting the project ID)
        run: |
              # figure out the GitHub ProjectID
              export projectID=$(curl -s \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/projects | jq '.[] | select(.name == "'$PROJECT_NAME'") | .id')
              echo "GitHub ProjectID: "$projectID

              # figure out the columnID for the draft PRs
              export columnIDForDraftPRs=$(curl -s \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/$PROJECT_ID/columns | jq '.[] | select(.name == "'$COLUMN_NAME_OF_DRAFT_PRS'") | .id')
              echo "ColumnID for Draft PRs: "$columnIDForDraftPRs

              # figure out the columnID for the non-draft PRs
              export columnIDForNonDraftPRs=$(curl -s \
                  -H "Accept: application/vnd.github.inertia-preview+json" \
                  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  $GITHUB_API_URL/projects/$PROJECT_ID/columns | jq '.[] | select(.name == "'$COLUMN_NAME_OF_NON_DRAFT_PRS'") | .id')
              echo "ColumnID for Non-Draft PRs: "$columnIDForNonDraftPRs
              
              # figure out which column to move from and which to
              if [[ "${{ github.event.action }}" == "converted_to_draft" ]]; then
                echo "Moving from non-draft to draft."
                export sourceColumnID=$columnIDForNonDraftPRs
                export targetColumnID=$columnIDForDraftPRs
              else
                echo "Moving from draft to non-draft."
                export sourceColumnID=$columnIDForDraftPRs
                export targetColumnID=$columnIDForNonDraftPRs
              fi;

              # figure out which ticket numbers to move
              # grab the first line that starts with "Fixes", collect the ticket numbers from the line and move those tickets into their column.
              
              export ticketNumbers=`echo "${{ github.event.pull_request.body }}" | grep -E "^Fixes" | head -n 1 | tr -d -C "0123456789#" | tr "#" "\n" | grep -E "[0-9]" | tr "\n" " "`
              
              echo "List of ticketNumbers: "$ticketNumbers
              
              for issueNumber in $ticketNumbers; do
                  echo -n "issueNumber: "$issueNumber", ";

                  export cardID=$(curl -s \
                      -H "Accept: application/vnd.github.inertia-preview+json" \
                      -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      $GITHUB_API_URL/projects/columns/$sourceColumnID/cards | jq '.[] | select(.content_url|endswith("/'$issueNumber'")) | .id')

                  if [[ -z "$cardID" ]]; then
                      echo "Card is "$cardID" is not in the column "$sourceColumnID", not moving." 
                  else
                      echo -n "Card is "$cardID" is in the column "$sourceColumnID", moving... " 
                      curl -s \
                          -X POST \
                          -H "Accept: application/vnd.github.inertia-preview+json" \
                          -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          $GITHUB_API_URL/projects/columns/cards/$cardID/moves \
                          -d '{"position":"bottom", "column_id": '$targetColumnID'}' >/dev/null;
                      echo "Moved."
                  fi;
              done;
              
              if [[ -z $issueNumber ]]; then
                  echo "The PR body has no card mnetioned in its Fixes: line, so no card has been moved."              
              fi

